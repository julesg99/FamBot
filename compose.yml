# version: "3.6"
services:
  postgres:
    image: postgres:15
    restart: always
    volumes:
      - ./volumes/postgres/data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - my-network
  graphql-engine:
    image: hasura/graphql-engine:v2.38.0
    ports:
      - "${HASURA_GRAPHQL_SERVER_PORT}:${HASURA_GRAPHQL_SERVER_PORT}"
    restart: always
    env_file:
      - .env
    depends_on:
      data-connector-agent:
        condition: service_healthy
    networks:
      - my-network
  data-connector-agent:
    image: hasura/graphql-data-connector:v2.38.0
    restart: always
    ports:
      - 8081:8081
    env_file:
      - .env
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/athena/health"]
      interval: 600s
      timeout: 10s
      retries: 5
      start_period: 5s
  fambot:
    image: node:18-alpine
    restart: no
    env_file:
      - .env
    depends_on:
      graphql-engine:
        condition: service_healthy
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 5s
volumes:
  postgres_data:

networks:
  my-network:
    driver: bridge
